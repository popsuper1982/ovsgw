qemu

sudo yum groupinstall "Development Tools"
sudo yum install -y cmake make ninja-build glib2 glib2-devel spice-server-devel spice-protocol usbredir-devel gcc
sudo yum install iasl  libssh-devel bzip2-devel  libepoxy-devel
sudo yum install libcap-ng-devel libdrm-devel
sudo yum install libbpf-devel libibumad-devel

编译与安装

$cd qemu-5.0.0
$./configure --enable-kvm --enable-debug --enable-vnc --enable-werror  --target-list="x86_64-softmmu"
$make -j8
$sudo make install

–enable-vnc 启用 VNC
–enable-kvm 编译 KVM 模块, 使 Qemu 可以利用 KVM  来访问硬件提供的虚拟化服务。
–enalbe-werror 编译时,将所有的警告当作错误处理。
–target-list 选择目标机器的架构。默认是将所有的架构都编译,但为了更快的完成编译,指定需要的架构即可.

安装好之后,会生成如下应用程序
ivshmem-client/server 这是一个 guest 和 host 共享内存的应用程序,遵循 C/S 的架构。
qemu-ga 这是一个不利用网络实现 guest 和 host 之间交互的应用程序,使用 virtio-serial,运行在 guest 中。
qemu-io 这是一个执行 Qemu I/O 操作的命令行工具。
qemu-system-x86_64 Qemu的核心应用程序,虚拟机就由它创建的。
qemu-img 创建虚拟机镜像文件的工具
qemu-nbd 磁盘挂载工具。

wget https://download.qemu.org/qemu-5.0.0.tar.xz
tar xvJf qemu-5.0.0.tar.xz
cd qemu-5.0.0/
./configure --target-list="x86_64-softmmu"
make
make install

https://libvirt.org/compiling.html

wget https://download.libvirt.org/libvirt-6.9.0.tar.xz
tar xvf libvirt-6.9.0.tar.xz
cd libvirt-6.9.0/ 
meson setup build

meson.build:919:2: ERROR: Program(s) ['xsltproc'] not found or not executable

yum install libxslt

meson.build:927:2: ERROR: Program(s) ['rpcgen', 'portable-rpcgen'] not found or not executable

yum search rpcgen

meson.build:1070:0: ERROR: Dependency "gnutls" not found, tried pkgconfig and cmake

yum install gnutls gnutls-devel gnutls-utils

meson.build:1166:0: ERROR: Dependency "libxml-2.0" not found, tried pkgconfig and cmake

yum install libxml2 libxml2-devel

meson.build:1534:4: ERROR: Problem encountered: XDR is required for remote driver

yum install libtirpc-devel

至此meson setup build成功

ninja -C build

ninja -C build install

////////////// QEMU-KVM: 安装第一个能上网的虚拟机

yum install bridge-utils


///////////


https://opendev.org/openstack/devstack

https://docs.openstack.org/devstack/zed/

 Ubuntu 20.04 (Focal Fossa)

 Ubuntu 18.04 (Bionic Beaver)

apt-get update
apt-get install git -y

git clone https://git.openstack.org/openstack-dev/devstack -b unmaintained/zed

git clone https://git.openstack.org/openstack-dev/devstack -b unmaintained/wallaby
不用OVN

devstack/tools/create-stack-user.sh

mv devstack /opt/stack

chown -R stack:stack /opt/stack/devstack

su – stack
cd devstack

alias pip='pip --default-timeout=3000'
alias pip3='pip3 --default-timeout=3000'

永久换源：
清华源
pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple

阿里源
pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/

腾讯源
pip config set global.index-url http://mirrors.cloud.tencent.com/pypi/simple

豆瓣源
pip config set global.index-url http://pypi.douban.com/simple/

3.换回默认源
pip config unset global.index-url

[global]
timeout = 60000
index-url = https://pypi.tuna.tsinghua.edu.cn/simple
[install]
use-mirrors = true
mirrors = https://pypi.tuna.tsinghua.edu.cn

--default-timeout=1000 
-i https://pypi.tuna.tsinghua.edu.cn/simple

pip install tensorflow-gpu==2.1.0 --default-timeout=1000 -i http://pypi.mirrors.ustc.edu.cn/simple/ --trusted-host http://pypi.mirrors.ustc.edu.cn

解决国外源下载慢的问题，修改这个文件，发现修改pip.conf不管用
vim inc/python

# Wrapper for ``pip install`` to set cache and proxy environment variables
# Uses globals ``OFFLINE``, ``PIP_VIRTUAL_ENV``,
# ``PIP_UPGRADE``, ``*_proxy``,
# Usage:
#  pip_install pip_arguments
function pip_install {
    local xtrace result
    xtrace=$(set +o | grep xtrace)
    set +o xtrace
    local upgrade=""
    local offline=${OFFLINE:-False}
    if [[ "$offline" == "True" || -z "$@" ]]; then
        $xtrace
        return
    fi

    time_start "pip_install"

    PIP_UPGRADE=$(trueorfalse False PIP_UPGRADE)
    if [[ "$PIP_UPGRADE" = "True" ]] ; then
        upgrade="--upgrade"
    fi

    if [[ -z "$os_PACKAGE" ]]; then
        GetOSVersion
    fi

    # Try to extract the path of the package we are installing into
    # package_dir.  We need this to check for test-requirements.txt,
    # at least.
    #
    # ${!#} expands to the last positional argument to this function.
    # With "extras" syntax included, our arguments might be something
    # like:
    #  -e /path/to/fooproject[extra]
    # Thus this magic line grabs just the path without extras
    #
    # Note that this makes no sense if this is a pypi (rather than
    # local path) install; ergo you must check this path exists before
    # use.  Also, if we had multiple or mixed installs, we would also
    # likely break.  But for historical reasons, it's basically only
    # the other wrapper functions in here calling this to install
    # local packages, and they do so with single call per install.  So
    # this works (for now...)
    local package_dir=${!#%\[*\]}

    if [[ -n ${PIP_VIRTUAL_ENV:=} && -d ${PIP_VIRTUAL_ENV} ]]; then
        local cmd_pip=$PIP_VIRTUAL_ENV/bin/pip
        local sudo_pip="env"
    else
        local cmd_pip="python$PYTHON3_VERSION -m pip"
        # See
        #  https://github.com/pypa/setuptools/issues/2232
        #  http://lists.openstack.org/pipermail/openstack-discuss/2020-August/016905.html
        # this makes setuptools >=50 use the platform distutils.
        # We only want to do this on global pip installs, not if
        # installing in a virtualenv
        local sudo_pip="sudo -H LC_ALL=en_US.UTF-8 SETUPTOOLS_USE_DISTUTILS=stdlib "
        echo "Using python $PYTHON3_VERSION to install $package_dir"
    fi

    cmd_pip="$cmd_pip install"
    # Always apply constraints
    cmd_pip="$cmd_pip -c $REQUIREMENTS_DIR/upper-constraints.txt"

    $xtrace

    $sudo_pip \
        http_proxy="${http_proxy:-}" \
        https_proxy="${https_proxy:-}" \
        no_proxy="${no_proxy:-}" \
        PIP_FIND_LINKS=$PIP_FIND_LINKS \
        $cmd_pip $upgrade \
        $@ \
        -i https://pypi.tuna.tsinghua.edu.cn/simple \
        --default-timeout=30000
    result=$?

    time_stop "pip_install"
    return $result
}

# install_tempest() - Collect source and prepare
function install_tempest {
    git_clone $TEMPEST_REPO $TEMPEST_DIR $TEMPEST_BRANCH
    # NOTE(gmann): Pinning tox<4.0.0 for stable/zed and lower. Tox 4.0.0
    # released after zed was released and has some incompatible changes
    # and it is ok not to fix the issues caused by tox 4.0.0 in stable
    # beanches jobs. We can continue testing the stable/zed and lower
    # branches with tox<4.0.0
    pip_install 'tox!=2.8.0,<4.0.0'
    pushd $TEMPEST_DIR
    # NOTE(gmann): checkout the TEMPEST_BRANCH in case TEMPEST_BRANCH
    # is tag name not master. git_clone would not checkout tag because
    # TEMPEST_DIR already exist until RECLONE is true.
    git checkout $TEMPEST_BRANCH

    local tmp_u_c_m
    tmp_u_c_m=$(mktemp -t tempest_u_c_m.XXXXXXXXXX)
    set_tempest_venv_constraints $tmp_u_c_m

    tox -r --notest -efull
    # NOTE(mtreinish) Respect constraints in the tempest full venv, things that
    # are using a tox job other than full will not be respecting constraints but
    # running pip install -U on tempest requirements
    $TEMPEST_DIR/.tox/tempest/bin/pip install -c $tmp_u_c_m -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --default-timeout=30000
    PROJECT_VENV["tempest"]=${TEMPEST_DIR}/.tox/tempest
    rm -f $tmp_u_c_m
    popd
}

192.168.10.9(内)
121.229.204.157(公)

192.168.10.8(内)
121.229.204.156(公)

使用正确的分支
vim stackrc

# Set the target branch. This is used so that stable branching
# does not need to update each repo below.
TARGET_BRANCH=unmaintained/zed

WARNING neutron.plugins.ml2.drivers.ovn.mech_driver.mech_driver [None req-59871ae7-a47b-4e27-8eee-4d49162c758e None None] Firewall driver configuration is ignored
CRITICAL neutron.plugins.ml2.drivers.ovn.mech_driver.mech_driver [None req-59871ae7-a47b-4e27-8eee-4d49162c758e None None] Geneve max_header_size set too low for OVN (30 vs 38)

/etc/neutron/plugins/ml2/ml2_conf.ini

----------------
[ml2_type_geneve]
vni_ranges = 1:1000

#
# From neutron.ml2
#

# Comma-separated list of <vni_min>:<vni_max> tuples enumerating ranges of
# Geneve VNI IDs that are available for tenant network allocation. Note OVN
# does not use the actual values. (list value)
#vni_ranges =

# The maximum allowed Geneve encapsulation header size (in bytes). Geneve
# header is extensible, this value is used to calculate the maximum MTU for
# Geneve-based networks. The default is 30, which is the size of the Geneve
# header without any additional option headers. Note the default is not enough
# for OVN which requires at least 38. (integer value)
#max_header_size = 30
------------------

vim lib/neutron

    # NOTE(yamamoto): A decomposed plugin should prepare the config file in
    # its devstack plugin.
    if [ -f $NEUTRON_DIR/etc/neutron/plugins/$NEUTRON_CORE_PLUGIN/$NEUTRON_CORE_PLUGIN_CONF_FILENAME.sample ]; then
        cp $NEUTRON_DIR/etc/neutron/plugins/$NEUTRON_CORE_PLUGIN/$NEUTRON_CORE_PLUGIN_CONF_FILENAME.sample $NEUTRON_CORE_PLUGIN_CONF

        iniset $NEUTRON_CORE_PLUGIN_CONF ml2_type_geneve max_header_size 38
    fi


lib/neutron:NEUTRON_CORE_PLUGIN_CONF_FILENAME=${NEUTRON_CORE_PLUGIN_CONF_FILENAME:-ml2_conf.ini}


2024-05-08 03:36:41.328 | + lib/neutron-legacy:_configure_neutron_common:808 :   mkdir -p /etc/neutron/plugins/ml2
2024-05-08 03:36:41.330 | + lib/neutron-legacy:_configure_neutron_common:809 :   Q_PLUGIN_CONF_FILE=etc/neutron/plugins/ml2/ml2_conf.ini
2024-05-08 03:36:41.331 | + lib/neutron-legacy:_configure_neutron_common:812 :   '[' -f /opt/stack/neutron/etc/neutron/plugins/ml2/ml2_conf.ini.sample ']'
2024-05-08 03:36:41.332 | + lib/neutron-legacy:_configure_neutron_common:813 :   cp /opt/stack/neutron/etc/neutron/plugins/ml2/ml2_conf.ini.sample /etc/neutron/plugins/ml2/ml2_conf.ini

2024-05-08 03:36:42.320 | + lib/neutron_plugins/ml2:neutron_plugin_configure_service:122 :   iniset /etc/neutron/plugins/ml2/ml2_conf.ini securitygroup firewall_driver neutron.agent.not.a.real.FirewallDriver
2024-05-08 03:36:42.336 | + lib/neutron_plugins/ml2:neutron_plugin_configure_service:127 :   populate_ml2_config /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers=ovn
2024-05-08 03:36:42.337 | + lib/neutron_plugins/ml2:populate_ml2_config:51 :   CONF=/etc/neutron/plugins/ml2/ml2_conf.ini
2024-05-08 03:36:42.344 | + lib/neutron_plugins/ml2:populate_ml2_config:60 :   iniset /etc/neutron/plugins/ml2/ml2_conf.ini ml2 mechanism_drivers ovn

opt/stack/neutron/devstack/ovn-compute-local.conf.sample:OVN_SB_REMOTE=tcp:$SERVICE_HOST:6642
opt/stack/neutron/devstack/ovn-local.conf.sample:#OVN_SB_REMOTE=tcp:$SERVICE_HOST:6642


Could not retrieve schema from tcp:127.0.0.1:6642

2024-05-08 06:35:25.914 | + ./stack.sh:main:1286                     :   is_service_enabled ovn-controller ovn-controller-vtep
2024-05-08 06:35:25.922 | + functions-common:is_service_enabled:2097 :   return 0
2024-05-08 06:35:25.924 | + ./stack.sh:main:1287                     :   echo_summary 'Starting OVN services'
2024-05-08 06:35:25.925 | + ./stack.sh:echo_summary:450              :   [[ -t 3 ]]
2024-05-08 06:35:25.926 | + ./stack.sh:echo_summary:450              :   [[ True != \T\r\u\e ]]
2024-05-08 06:35:25.927 | + ./stack.sh:echo_summary:456              :   echo -e Starting OVN services
2024-05-08 06:35:25.928 | + ./stack.sh:main:1288                     :   start_ovn_services
2024-05-08 06:35:25.930 | + lib/neutron-legacy:start_ovn_services:519 :   [[ openvswitch == \o\v\n ]]
2024-05-08 06:35:25.931 | + ./stack.sh:main:1291                     :   is_service_enabled neutron-api
2024-05-08 06:35:25.939 | + functions-common:is_service_enabled:2097 :   return 1
2024-05-08 06:35:25.940 | + ./stack.sh:main:1294                     :   is_service_enabled q-svc
2024-05-08 06:35:25.948 | + functions-common:is_service_enabled:2097 :   return 0
2024-05-08 06:35:25.949 | + ./stack.sh:main:1295                     :   echo_summary 'Starting Neutron'
2024-05-08 06:35:25.951 | + ./stack.sh:echo_summary:450              :   [[ -t 3 ]]
2024-05-08 06:35:25.952 | + ./stack.sh:echo_summary:450              :   [[ True != \T\r\u\e ]]
2024-05-08 06:35:25.953 | + ./stack.sh:echo_summary:456              :   echo -e Starting Neutron

https://opendev.org/openstack/devstack/src/branch/unmaintained/zed/stackrc

if ! isset ENABLED_SERVICES ; then
    # Keystone - nothing works without keystone
    ENABLED_SERVICES=key
    # Nova - services to support libvirt based openstack clouds
    ENABLED_SERVICES+=,n-api,n-cpu,n-cond,n-sch,n-novnc,n-api-meta
    # Placement service needed for Nova
    ENABLED_SERVICES+=,placement-api,placement-client
    # Glance services needed for Nova
    ENABLED_SERVICES+=,g-api
    # Cinder
    ENABLED_SERVICES+=,c-sch,c-api,c-vol
    # OVN
    ENABLED_SERVICES+=,ovn-controller,ovn-northd,ovs-vswitchd,ovsdb-server
    # Neutron
    ENABLED_SERVICES+=,q-svc,q-ovn-metadata-agent
    # Dashboard
    ENABLED_SERVICES+=,horizon
    # Additional services
    ENABLED_SERVICES+=,rabbit,tempest,mysql,etcd3,dstat
fi

在使用OVN之前

https://docs.openstack.org/devstack/wallaby/
Ubuntu 18.04 (Bionic Beaver)

if ! isset ENABLED_SERVICES ; then
    # Keystone - nothing works without keystone
    ENABLED_SERVICES=key
    # Nova - services to support libvirt based openstack clouds
    ENABLED_SERVICES+=,n-api,n-cpu,n-cond,n-sch,n-novnc,n-api-meta
    # Placement service needed for Nova
    ENABLED_SERVICES+=,placement-api,placement-client
    # Glance services needed for Nova
    ENABLED_SERVICES+=,g-api
    # Cinder
    ENABLED_SERVICES+=,c-sch,c-api,c-vol
    # Neutron
    ENABLED_SERVICES+=,q-svc,q-dhcp,q-meta,q-agt,q-l3
    # Dashboard
    ENABLED_SERVICES+=,horizon
    # Additional services
    ENABLED_SERVICES+=,rabbit,tempest,mysql,etcd3,dstat
fi


if is_service_enabled ovn-controller ovn-controller-vtep; then
    echo_summary "Starting OVN services"
    start_ovn_services
fi

# Start running OVN processes
function start_ovn_services {
    if [[ $Q_AGENT == "ovn" ]]; then
        init_ovn
        start_ovn
        if [[ "$OVN_L3_CREATE_PUBLIC_NETWORK" == "True" ]]; then
            if [[ "$NEUTRON_CREATE_INITIAL_NETWORKS" != "True" ]]; then
                echo "OVN_L3_CREATE_PUBLIC_NETWORK=True is being ignored "
                echo "because NEUTRON_CREATE_INITIAL_NETWORKS is set to False"
            else
                create_public_bridge
            fi
        fi
    fi
}

function init_ovn {
    # clean up from previous (possibly aborted) runs
    # create required data files

    # Assumption: this is a dedicated test system and there is nothing important
    # in the ovn, ovn-nb, or ovs databases.  We're going to trash them and
    # create new ones on each devstack run.

    _disable_libvirt_apparmor
    local mkdir_cmd="mkdir -p ${OVN_DATADIR}"

    if [[ "$OVN_BUILD_FROM_SOURCE" == "False" ]]; then
        mkdir_cmd="sudo ${mkdir_cmd}"
    fi

    $mkdir_cmd
    mkdir -p $OVS_DATADIR

    rm -f $OVS_DATADIR/*.db
    rm -f $OVS_DATADIR/.*.db.~lock~
    sudo rm -f $OVN_DATADIR/*.db
    sudo rm -f $OVN_DATADIR/.*.db.~lock~
    sudo rm -f $OVN_RUNDIR/*.sock
}



Installing collected packages: argparse, httplib2, cursive, glance
  Attempting uninstall: httplib2
    Found existing installation: httplib2 0.9.2
ERROR: Cannot uninstall 'httplib2'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.
+ inc/python:pip_install:1                 :   exit_trap
+ ./stack.sh:exit_trap:524                 :   local r=1
++ ./stack.sh:exit_trap:525                 :   jobs -p
+ ./stack.sh:exit_trap:525                 :   jobs=
+ ./stack.sh:exit_trap:528                 :   [[ -n '' ]]
+ ./stack.sh:exit_trap:534                 :   '[' -f '' ']'
+ ./stack.sh:exit_trap:539                 :   kill_spinner
+ ./stack.sh:kill_spinner:434              :   '[' '!' -z '' ']'
+ ./stack.sh:exit_trap:541                 :   [[ 1 -ne 0 ]]
+ ./stack.sh:exit_trap:542                 :   echo 'Error on exit'
Error on exit
+ ./stack.sh:exit_trap:544                 :   type -p generate-subunit
+ ./stack.sh:exit_trap:545                 :   generate-subunit 1715165724 46 fail
+ ./stack.sh:exit_trap:547                 :   [[ -z /opt/stack/logs ]]
+ ./stack.sh:exit_trap:550                 :   /usr/bin/python3.6 /opt/stack/devstack/tools/worlddump.py -d /opt/stack/logs
+ ./stack.sh:exit_trap:559                 :   exit 1

pip install --ignore-installed httplib2


stack@devstack-controller:~/devstack$ pip show httplib2
Name: httplib2
Version: 0.22.0
Summary: A comprehensive HTTP client library.
Home-page: https://github.com/httplib2/httplib2
Author: Joe Gregorio
Author-email: joe@bitworking.org
License: MIT
Location: /opt/stack/.local/lib/python3.6/site-packages
Requires: pyparsing
Required-by:
stack@devstack-controller:~/devstack$ pip3
pip3    pip3.6
stack@devstack-controller:~/devstack$ pip3 show httplib2
Name: httplib2
Version: 0.22.0
Summary: A comprehensive HTTP client library.
Home-page: https://github.com/httplib2/httplib2
Author: Joe Gregorio
Author-email: joe@bitworking.org
License: MIT
Location: /opt/stack/.local/lib/python3.6/site-packages
Requires: pyparsing
Required-by:

cd /usr/lib/python3/dist-packages/
里面有httplib2 0.9.2
删除

++ lib/tempest:install_tempest:766          :   tox -r --notest -efull
full create: /opt/stack/tempest/.tox/tempest
full installdeps: -c/opt/stack/requirements/upper-constraints.txt, -r/opt/stack/tempest/requirements.txt

/opt/stack/tempest/.tox/tempest/bin/pip install -c/opt/stack/requirements/upper-constraints.txt -r/opt/stack/tempest/requirements.txt

tox -i https://pypi.my-alternative-index.org

tox -r --notest -efull -i https://pypi.tuna.tsinghua.edu.cn/simple

# install_tempest() - Collect source and prepare
function install_tempest {
    git_clone $TEMPEST_REPO $TEMPEST_DIR $TEMPEST_BRANCH
    # NOTE(gmann): Pinning tox<4.0.0 for stable/zed and lower. Tox 4.0.0
    # released after zed was released and has some incompatible changes
    # and it is ok not to fix the issues caused by tox 4.0.0 in stable
    # beanches jobs. We can continue testing the stable/zed and lower
    # branches with tox<4.0.0
    pip_install 'tox!=2.8.0,<4.0.0'
    pushd $TEMPEST_DIR
    # NOTE(gmann): checkout the TEMPEST_BRANCH in case TEMPEST_BRANCH
    # is tag name not master. git_clone would not checkout tag because
    # TEMPEST_DIR already exist until RECLONE is true.
    git checkout $TEMPEST_BRANCH

    local tmp_u_c_m
    tmp_u_c_m=$(mktemp -t tempest_u_c_m.XXXXXXXXXX)
    set_tempest_venv_constraints $tmp_u_c_m

    tox -r --notest -efull -i https://pypi.tuna.tsinghua.edu.cn/simple
    # NOTE(mtreinish) Respect constraints in the tempest full venv, things that
    # are using a tox job other than full will not be respecting constraints but
    # running pip install -U on tempest requirements
    $TEMPEST_DIR/.tox/tempest/bin/pip install -c $tmp_u_c_m -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple
    PROJECT_VENV["tempest"]=${TEMPEST_DIR}/.tox/tempest
    rm -f $tmp_u_c_m
    popd
}